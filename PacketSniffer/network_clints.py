#!/usr/bin/env python
import subprocess
import optparse
import re
import sys


def get_arguments():
    parser = optparse.OptionParser()

    parser.add_option("-i", "--interface", dest="interface", help="Interface to change its Wireless Mode")
    parser.add_option("-b", "--bssid", dest="bssid", help="Interface to change its Wireless Mode")
    parser.add_option("-c", "--channel", dest="channel", help="Interface to change its Wireless Mode")
    parser.add_option("-s", "--save", dest="save", help="Interface to change its Wireless Mode")

    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[.] Please specify an interface, use --help for more info")
    elif not options.bssid:
        parser.error("[.] Please specify an interface, use --help for more info")
    elif not options.channel:
        parser.error("[.] Please specify an interface, use --help for more info")
    return options


def network_clints(interface, bssid, channel, save):
    try:
        subprocess.call("airmon-ng check kill", shell=True)
        subprocess.call("airmon-ng start " + interface, shell=True)
        subprocess.call("mkdir PacketSniffer/data/" + save, shell=True)
        subprocess.call('airodump-ng --bssid ' + bssid + ' --channel ' + channel + ' --write ' + 'PacketSniffer/data/' + save + '/' + save + ' ' + interface,
                        shell=True)


    except KeyboardInterrupt:

        print("[-] Scan Stopped by user ")
        subprocess.call("wireshark -r PacketSniffer/data/" + save + '/' + save + '-01.cap &', shell=True)
        subprocess.call("systemctl start NetworkManager.service", shell=True)
        sys.exit()


options = get_arguments()
network_clints(options.interface, options.bssid, options.channel, options.save)
